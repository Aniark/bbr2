name: l4s_x86

on:
#  repository_dispatch:
  workflow_dispatch:
#  push:
#  release:
#    types: [released, edited]

jobs:
  build:
    name: build
    runs-on: ubuntu-18.04
    env:
      TZ: Asia/Shanghai
    steps:
      - name: Install deps
        run: |
         sudo apt update
         sudo apt --no-install-recommends install kernel-package libncurses5-dev libelf-dev gcc-i686-linux-gnu liblz4-tool
         mkdir releases
      - name: Build
        run: |
          git clone https://github.com/google/bbr.git -b l4s-testing-2022-11-06-v1
          cd bbr
          wget -qO i386 https://salsa.debian.org/kernel-team/linux/-/raw/sid/debian/config/i386/config
          wget -qO i686 https://salsa.debian.org/kernel-team/linux/-/raw/sid/debian/config/i386/config.686
          wget -qO kernelarch-x86 https://salsa.debian.org/kernel-team/linux/-/raw/sid/debian/config/kernelarch-x86/config
          wget -qO .config https://salsa.debian.org/kernel-team/linux/-/raw/sid/debian/config/config
          wget -qO cloud https://salsa.debian.org/kernel-team/linux/-/raw/sid/debian/config/config.cloud
          cat i386 i686 kernelarch-x86 cloud >> .config
          scripts/config -d DEBUG_INFO \
                         -u SYSTEM_TRUSTED_KEYS \
                         -m CONFIG_TCP_CONG_PRAGUE \
                         -m CONFIG_TCP_CONG_BBR \
                         -m CONFIG_TCP_CONG_BBR2 \
                         -m CONFIG_TCP_CONG_DCTCP \
                         -m CONFIG_NET_IPIP \
                         -m CONFIG_NET_CLS_U32 \
                         -m CONFIG_NET_SCH_DUALPI2 \
                         -m CONFIG_NET_SCH_PIE \
                         -m CONFIG_NET_SCH_FQ \
                         -m CONFIG_NET_SCH_FQ_CODEL \
                         -m CONFIG_NET_SCH_CODEL \
                         -m CONFIG_NET_SCH_RED \
                         -m CONFIG_NET_SCH_CAKE \
                         -m CONFIG_NET_SCH_HTB \
                         -m CONFIG_NET_SCH_NETEM \
                         -m CONFIG_NET_SCH_INGRESS \
                         -m CONFIG_NET_ACT_MIRRED \
                         -m CONFIG_IFB \
                         -m CONFIG_VETH \
                         -m CONFIG_BRIDGE \
                         -m CONFIG_INET_DIAG
          make CROSS_COMPILE=i686-linux-gnu- bindeb-pkg -j`nproc`
      - name: Move bins to release dir
        run: |
          mv *.deb ${GITHUB_WORKSPACE}/releases
      - name: Generate release tag
        run: |
          echo "::set-output name=release_tag::l4s_x86"
          touch release.txt
          echo "Last updated on $(date +"%Y.%m.%d-%H:%M") UTC+08:00" >> release.txt
      - name: Upload bins to release
        uses: softprops/action-gh-release@v1
        with:
         tag_name: l4s_x86
         body_path: release.txt
         files: releases/*
      - name: Delete workflow runs
        uses: GitRML/delete-workflow-runs@main
        with:
         retain_days: 1
         keep_minimum_runs: 3
         
  push:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@master
    - name: Clean
      run: |
        rm -rf release bbr
    - name: Commit
      run: |
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions"
        git checkout --orphan new_branch
        git add -A
        git commit -am "update new file"
        git branch -D main
        git branch -m main
        git push origin main --force
